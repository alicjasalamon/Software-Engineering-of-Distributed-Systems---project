
<h1>Data model and database interfaces</h1>

<script type="text/javascript">
    var data = {
        name: "Data management",
        interfaces: [
            {
                name: "Create sample data",
                url: "/data",
                example: 
'$.ajax({ type: "POST", url: "data" }).success(function(data) { \n\
    console.log(data.message);\n\
});',
            },
            {
                name: "Clear database",
                url: "/data/clear",
                example: 
'$.ajax({ type: "POST", url: "data/clear" }).success(function(data) { \n\
    console.log(data.message);\n\
});',
            },
        ],
    };
    generateDocs(data);
    
    var user = {
        name: "User",
        fields: [
            {name:"id", type:"string"},
            {name:"login", type:"string"},
            {name:"password", type:"string"},
            {name:"group", type:"string"},
        ],
        interfaces: [
            {
                name: "Add user",
                url: "/db/user/add",
                parameters: [
                    {name:"login", type:"string"},
                    {name:"password", type:"string"},
                    {name:"group", type:"string"},
                    {name:"firstname", type:"string"},
                    {name:"lastname", type:"string"},
                    {name:"email", type:"string"},
                    {name:"institution", type:"string (id)", optional: true},
                    {name:"doctor", type:"string (id)", optional: true},
                ],
                example: 
'$.ajax({ type: "POST", url: "db/user/add", data: { \n\
    "login": "user",\n\
    "password": "1234",\n\
    "group": "admin", //doctor, patient, admin\n\
    "firstname": "Jan",\n\
    "lastname": "Kowalski",\n\
    "email": "jankowalski@example.com"\n\
}}).success(function(data) { \n\
    console.log("User added:"); \n\
    console.log(JSON.stringify(data)); \n\
});',
            },
        ],
    };
    generateDocs(user);
    
    var institution = {
        name: "Institution",
        fields: [
            {name:"id", type:"string"},
            {name:"name", type:"string"},
        ],
        interfaces: [
            {
                name: "Get institution",
                url: "/db/institution",
                parameters: [
                    {name:"id", type:"string"},
                ],
                example:
'$.ajax({ type: "POST", url: "db/institution", data: {\n\
    id: "INSTITUTIONID",\n\
}}).success(function(data) { \n\
    console.log(JSON.stringify(data)); \n\
});',
            },
            {
                name: "Get all institutions",
                url: "/db/institution/all",
                example: 
"$.ajax('/db/institution/all').success(function(data) { \n\
    console.log(JSON.stringify(data)); \n\
});",
            },
            {
                name: "Add institution",
                url: "/db/institution/add",
                example: 
'$.ajax({ type: "POST", url: "db/institution/add", data: { \n\
    "name": "Placowka gicior" }\n\
}).success(function(data) { \n\
    console.log("Institution added"); \n\
});',
                parameters: [
                    {name:"name", type:"string"},
                ],
            }
        ],
    };
    generateDocs(institution);
    
    var doctor = {
        name: "Doctor",
        fields: [
            {name:"id", type:"string"},
            {name:"firstname", type:"string"},
            {name:"lastname", type:"string"},
            {name:"user", type:"string (id)"},
            {name:"institution", type:"string (id)"},
        ],
        interfaces: [
            {
                name: "Get doctor",
                url: "/db/doctor",
                parameters: [
                    {name:"id", type:"string"},
                ],
                example:
'$.ajax({ type: "POST", url: "db/doctor", data: {\n\
    id: "DOCTORID",\n\
}}).success(function(data) { \n\
    console.log(JSON.stringify(data)); \n\
});',
            },
            {
                name: "Get all doctors",
                url: "/db/doctor/all",
                example: 
'$.ajax("/db/doctor/all").success(function(data) { \n\
    console.log(JSON.stringify(data)); \n\
});',
            },
        ],
    };
    generateDocs(doctor);
    
    var patient = {
        name: "Patient",
        fields: [
            {name:"id", type:"string"},
            {name:"firstname", type:"string"},
            {name:"lastname", type:"string"},
            {name:"schedule", type:"string (id)"},
            {name:"user", type:"string (id)"},
            {name:"institution", type:"string (id)"},
            {name:"doctor", type:"string (id)"},
        ],
        interfaces: [
            {
                name: "Get patient",
                url: "/db/patient",
                parameters: [
                    {name:"id", type:"string"},
                ],
                example:
'$.ajax({ type: "POST", url: "db/patient", data: {\n\
    id: "PATIENTID",\n\
}}).success(function(data) { \n\
    console.log(JSON.stringify(data)); \n\
});',
            },
            {
                name: "Get all patients",
                url: "/db/patient/all",
                example: 
'$.ajax("/db/patient/all").success(function(data) { \n\
    console.log(JSON.stringify(data));\n\
});',
            },
        ],
    };
    generateDocs(patient);
    
    var schedule = {
        name: "Schedule",
        fields: [
            {name:"days", type:"Day[]"},
        ],
    };
    generateDocs(schedule);
    
    var day = {
        name: "Day",
        fields: [
            {name:"date", type:"string"},
            {name:"streams", type:"Stream[]"},
        ],
        interfaces: [
            {
                name: "Get day",
                url: "/db/day",
                parameters: [
                    {name:"patientid", type:"string (id)"},
                    {name:"date", type:"string"},
                ],
                example:
'$.ajax({ type: "POST", url: "db/day", data: {\n\
    patientid: "PATIENTID",\n\
    date: "20140418",\n\
}}).success(function(data) { \n\
    console.log(JSON.stringify(data)); \n\
});',
            },
        ]
    };
    generateDocs(day);
    
    var stream = {
        name: "Stream",
        fields: [
            {name:"activity", type:"string"},
            {name:"events", type:"Event[]"},
        ],
    };
    generateDocs(stream);
    
    var event = {
        name: "Event",
        fields: [
            {name:"id", type:"string"},
            {name:"title", type:"string"},
            {name:"details", type:"string"},
            {name:"time", type:"string"},
            {name:"duration", type:"integer"},
            {name:"state", type:"string"},
            {name:"measurement", type:"string"},
            {name:"measurementvalue", type:"string"},
        ],
        interfaces: [
            {
                name: "Add event",
                url: "/db/event/add",
                parameters: [
                    {name:"patientid", type:"string"},
                    {name:"date", type:"string"},
                    {name:"activity", type:"string"},
                    {name:"title", type:"string"},
                    {name:"details", type:"string"},
                    {name:"time", type:"string"},
                    {name:"duration", type:"integer"},
                    {name:"measurement", type:"string", optional: true},
                ],
                example:
'$.ajax({ type: "POST", url: "db/event/add", data: {\n\
    patientid: "PATIENTID",\n\
    date: "20140418",\n\
    activity: "diet", // diet, exercises, medicines, visits, measurements\n\
    title: "Test title!",\n\
    details: "Lorem ipsum details",\n\
    time: "08:00",\n\
    duration: 60,\n\
}}).success(function(data) { \n\
    console.log(JSON.stringify(data)); \n\
});',
            },
            {
                name: "Delete event",
                url: "/db/event/delete",
                parameters: [
                    {name:"id", type:"string"},
                ],
                example:
'$.ajax({ type: "POST", url: "db/event/add", data: {\n\
    id: "EVENTID",\n\
}}).success(function(data) { \n\
    console.log(JSON.stringify(data)); \n\
});',
            },
            {
                name: "Set state",
                url: "/db/event/state",
                parameters: [
                    {name:"id", type:"string (id)"},
                    {name:"state", type:"string"},
                ],
                example:
'$.ajax({ type: "POST", url: "db/event/state", data: {\n\
    id: "EVENTID",\n\
    state: "future", //future, inprogress, done, undone\n\
}}).success(function(data) { \n\
    console.log(JSON.stringify(data)); \n\
});',
            },
            {
                name: "Set measurement value",
                url: "/db/event/measurement",
                parameters: [
                    {name:"id", type:"string (id)"},
                    {name:"measurementvalue", type:"string"},
                ],
                example:
'$.ajax({ type: "POST", url: "db/event/measurement", data: {\n\
    id: "EVENTID",\n\
    measurementvalue: "64kg", \n\
}}).success(function(data) { \n\
    console.log(JSON.stringify(data)); \n\
});',
            },
            {
                name: "Get undone events",
                url: "/db/event/undone",
                parameters: [
                    {name:"doctorid", type:"string (id)"},
                ],
                example:
'$.ajax({ type: "POST", url: "db/event/undone", data: {\n\
    doctorid: "DOCTORID",\n\
}}).success(function(data) { \n\
    console.log(JSON.stringify(data)); \n\
});',
            },
        ],
    };
    generateDocs(event);
    
    var measurement = {
        name: "Measurement",
        fields: [
            {name:"date", type:"string"},
            {name:"time", type:"string"},
            {name:"patient", type:"string"},
            {name:"measurement", type:"string"},
            {name:"measurementvalue", type:"string"},
        ],
        interfaces: [
            {
                name: "Get measurements",
                url: "/db/measurements",
                parameters: [
                    {name:"doctorid", type:"string (id)"},
                ],
                example:
'$.ajax({ type: "POST", url: "db/measurements", data: {\n\
    doctorid: "DOCTORID",\n\
}}).success(function(data) { \n\
    console.log(JSON.stringify(data)); \n\
});',
            },
        ]
    };
    generateDocs(measurement);
    
</script>
